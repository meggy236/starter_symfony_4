UserMutation:
    decorator: true
    heirs: [Mutation]
    config:
        fields:
            AdminCreateUser:
                type: AdminUserMutationPayload!
                public: '@=hasRole("ROLE_ADMIN")'
                access: '@=hasRole("ROLE_ADMIN")'
                resolve: '@=mutation("App\\Infrastructure\\GraphQl\\Mutation\\AdminUserCreateMutation", [args])'
                args:
                    user: AdminUserCreateInput!
            AdminUpdateUser:
                type: AdminUserMutationPayload!
                public: '@=hasRole("ROLE_ADMIN")'
                access: '@=hasRole("ROLE_ADMIN")'
                resolve: '@=mutation("App\\Infrastructure\\GraphQl\\Mutation\\AdminUserUpdateMutation", [args])'
                args:
                    user: AdminUserUpdateInput!
            AdminActivateUser:
                type: AdminUserMutationPayload!
                public: '@=hasRole("ROLE_ADMIN")'
                access: '@=hasRole("ROLE_ADMIN")'
                resolve: '@=mutation("App\\Infrastructure\\GraphQl\\Mutation\\AdminUserActivateMutation", [args])'
                args:
                    user: AdminUserActivateInput!
            AdminVerifyUser:
                type: AdminUserMutationPayload!
                public: '@=hasRole("ROLE_ADMIN")'
                access: '@=hasRole("ROLE_ADMIN")'
                resolve: '@=mutation("App\\Infrastructure\\GraphQl\\Mutation\\AdminUserVerifyMutation", [args])'
                args:
                    user: AdminUserInput!
            AdminSendResetToUser:
                type: AdminUserMutationPayload!
                public: '@=hasRole("ROLE_ADMIN")'
                access: '@=hasRole("ROLE_ADMIN")'
                resolve: '@=mutation("App\\Infrastructure\\GraphQl\\Mutation\\AdminUserSendResetToUserMutation", [args])'
                args:
                    user: AdminUserInput!

AdminUserCreateInput:
    type: input-object
    config:
        description: 'User create mutation input.'
        fields:
            id:
                type: UUID!
            email:
                type: String!
            setPassword:
                type: Boolean!
            password:
                type: String
            role:
                type: Role!
            active:
                type: Boolean!
            firstName:
                type: String!
            lastName:
                type: String!
            sendInvite:
                type: Boolean!

AdminUserUpdateInput:
    type: input-object
    config:
        description: 'User update mutation input.'
        fields:
            id:
                type: UUID!
            email:
                type: String!
            changePassword:
                type: Boolean!
            password:
                type: String
            role:
                type: Role!
            firstName:
                type: String!
            lastName:
                type: String!

AdminUserActivateInput:
    type: input-object
    config:
        description: 'User activate/deactivate mutation input.'
        fields:
            id:
                type: UUID!
            action:
                type: String!

AdminUserInput:
    type: input-object
    config:
        description: 'User mutation input.'
        fields:
            id:
                type: UUID!

AdminUserMutationPayload:
    type: object
    config:
        description: 'User mutation payload.'
        fields:
            id:
                type: UUID!
