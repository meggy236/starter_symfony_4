UserQuery:
    decorator: true
    heirs: [Query]
    config:
        fields:
            Users:
                type: '[User!]'
                description: 'Retrieve all Users or a subset based on the passed filters.'
                public: '@=hasRole("ROLE_ADMIN")'
                access: '@=hasRole("ROLE_ADMIN")'
                resolve: '@=resolver("Xm\\SymfonyBundle\\Infrastructure\\GraphQl\\Resolver\\User\\UsersResolver", [args["filters"]])'
                args:
                    filters: UserFilterInput

            User:
                type: User
                description: 'Retrieve a single User.'
                public: '@=hasRole("ROLE_ADMIN")'
                access: '@=hasRole("ROLE_ADMIN")'
                resolve: '@=resolver("Xm\\SymfonyBundle\\Infrastructure\\GraphQl\\Resolver\\User\\UserResolver", [args["userId"]])'
                args:
                    userId:
                        type: UUID!

UserFilterInput:
    type: input-object
    config:
        description: 'Available filters for querying users. Any passed fields will be applied. Exclude the key/field to skip that filter.'
        fields:
            email:
                type: String
            emailExact:
                type: String
            active:
                type: Boolean
