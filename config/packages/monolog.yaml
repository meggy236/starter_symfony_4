monolog:
    channels:
        - deprecation # Deprecations are logged in the dedicated "deprecation" channel when it exists

when@dev:
    monolog:
        handlers:
            main:
                type:  stream
                path:  '%kernel.logs_dir%/%kernel.environment%.log'
                level: debug
                channels: [ '!event' ]
            # uncomment to get logging in your browser
            # you may have to allow bigger header sizes in your Web server configuration
            #firephp:
            #    type: firephp
            #    level: info
            #chromephp:
            #    type: chromephp
            #    level: info
            console:
                type:                   console
                process_psr_3_messages: false
                channels: [ '!event', '!doctrine', '!console' ]

when@test:
    monolog:
        handlers:
            main:
                type:         fingers_crossed
                action_level: error
                handler:      nested
                excluded_http_codes: [ 404, 405 ]
                channels: [ '!event' ]
            nested:
                type:  stream
                path:  '%kernel.logs_dir%/%kernel.environment%.log'
                level: debug

when@prod:
    monolog:
        handlers:
            # main/logging: all errors
            main:
                type:         fingers_crossed
                action_level: error
                handler:      nested
                excluded_http_codes: [ 404, 405 ]
                buffer_size:  50 # How many messages should be saved? Prevent memory leaks
            nested:
                type:  stream
                path:  '%kernel.logs_dir%/%kernel.environment%.log'
                level: debug

            # main/mailing: only critical
            main_mail:
                type:         fingers_crossed
                action_level: critical
                handler:      deduplicated
            # remove duplicates that occur within 60s
            deduplicated:
                type:    deduplication
                handler: buffered
            buffered:
                type:    buffer
                handler: symfony_mailer
            symfony_mailer:
                type:         symfony_mailer
                from_email:   '%env(FROM_EMAIL)%'
                to_email:     '%env(ERROR_EMAIL)%'
                # @todo-symfony
                subject:      'Symfony Starter Error: %%message%%'
                level:        debug
                formatter:    monolog.formatter.html
                content_type: text/html

            console:
                type:                   console
                process_psr_3_messages: false
                channels: [ '!event', '!doctrine' ]

            deprecation:
                type: stream
                channels: [ deprecation ]
                path: '%kernel.logs_dir%/%kernel.environment%.deprecations.log'

services:
    Symfony\Bridge\Monolog\Processor\WebProcessor:
        tags: [ 'kernel.event_subscriber', 'monolog.processor' ]
        arguments:
            $extraFields:
                referrer:    'HTTP_REFERER'
                http_method: 'REQUEST_METHOD'
                ip:          'REMOTE_ADDR'
                user_agent:  'HTTP_USER_AGENT'

    Xm\SymfonyBundle\Infrastructure\Logger\GraphQlProcessor:
        tags: [ 'kernel.event_subscriber', 'monolog.processor' ]
