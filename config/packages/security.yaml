security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_provider:
            entity:
                class: App\Entity\User
                property: email

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    encoders:
        App\Entity\User:
            algorithm: 'argon2i'
            # values below are meant to take ~2 seconds on 4 core machine
            # use the app:security:password-encode-test to determine what this should be
            # maximum memory (in KiB) that may be used to compute the Argon2 hash
            memory_cost: 128000
            #  number of times the Argon2 hash algorithm will be run
            time_cost: 37
            # number of threads to use for computing the Argon2 hash
            # ~2x number of cores
            threads: 8
        harsh:
            algorithm: 'argon2i'
            # see above
            # values are targeted at ~4s
            memory_cost: 128000
            time_cost: 60
            threads: 8

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\AppAuthenticator
            user_checker: App\Security\UserChecker
            logout:
                path: app_logout

            remember_me:
                secret:   '%kernel.secret%'
                name:     'remember-me'
                lifetime: 2592000 # 30 days
                path:     /
                secure:   true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/profile, roles: ROLE_USER }
